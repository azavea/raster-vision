#!/bin/bash

set -e

if [[ -n "${RASTER_VISION_DEBUG}" ]]; then
    set -x
fi

RASTER_VISION_DATA_DIR="${RASTER_VISION_DATA_DIR:-/tmp}"

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
SCRIPTS_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
PROJECT_ROOT="$( cd -P "$( dirname "$SCRIPTS_DIR" )" && pwd )"
SRC="${PROJECT_ROOT}/src"

function usage() {
    echo -n \
         "Usage: $(basename "$0")
Run raster-vision image locally.
--aws forwards AWS credentials.
--tensorboard maps port 6006
--gpu use the NVIDIA runtime and GPU image
--name <name> gives the container a name
--rv-config forwards RV config
All arguments after above options are passed to 'docker run'.
"
}

IMAGE="raster-vision-cpu"

# Parse options using scheme in
# https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
POSITIONAL=()
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        --aws)
        AWS="-e AWS_PROFILE=${AWS_PROFILE:-default} -v ${HOME}/.aws:/root/.aws:ro"
        shift # past argument
        ;;
        --rv-config)
        RV_CONFIG="-e RV_PROFILE=${RV_PROFILE} -v ${HOME}/.rastervision:/root/.rastervision:ro"
        shift # past argument
        ;;
        --tensorboard)
        TENSORBOARD="-p 6006:6006"
        shift # past argument
        ;;
        --gpu)
        IMAGE="raster-vision-gpu"
        RUNTIME="--runtime=nvidia"
        shift # past argument
        ;;
        --name)
        shift
        NAME="--name $1"
        shift
        ;;
        *)    # unknown option
        POSITIONAL+=("$1") # save it in an array for later
        shift # past argument
        ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    docker run ${RUNTIME} ${NAME} --rm -it ${TENSORBOARD} ${RV_CONFIG} ${AWS} \
        -v "$SRC":/opt/src \
        -v ${RASTER_VISION_DATA_DIR}:/opt/data \
        ${IMAGE} "${@:1}"
fi
