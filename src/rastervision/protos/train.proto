syntax = "proto2";

package rv.protos;

import "rastervision/protos/model_config.proto";

message TrainConfig {

    message ObjectDetectionOptions {
        // path to Object Detection's train.py script
        optional string train_py = 1 [default="/opt/tf-models/object_detection/train.py"];

        // path to Object Detection's eval.py script
        optional string eval_py = 2 [default="/opt/tf-models/object_detection/eval.py"];

        // path to Object Detection's export_inference_graph.py script
        optional string export_py = 3 [default="/opt/tf-models/object_detection/export_inference_graph.py"];
    }

    message SegmentationOptions {
        optional string train_py = 1 [default="/opt/tf-models/deeplab/train.py"];
        optional string export_model_py = 2 [default="/opt/tf-models/deeplab/export_model.py"];
    }

    message Options {
        // URI for a separate training configuration that is specific to an ML
        // backend.
        optional string backend_config_uri = 1;

        // URI for the directory containing the output of make_chips.
        optional string training_data_uri = 2;

        // URI for the directory containing the output of training.
        optional string output_uri = 3;

        // URI for the pretrained model file. If blank, then it train from
        // scratch.
        optional string pretrained_model_uri = 4;

        // How often to sync output of training to the cloud (in seconds).
        optional int32 sync_interval = 5 [default=600];

        // Run process to monitor training (eg. Tensorboard)
        optional bool do_monitoring = 8 [default=true];

        oneof ml_options_type {
            ObjectDetectionOptions object_detection_options = 6;
            SegmentationOptions segmentation_options = 7;
        }
    }

    required ModelConfig model_config = 1;
    required Options options = 2;
}
